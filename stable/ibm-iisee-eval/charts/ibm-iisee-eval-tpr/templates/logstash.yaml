kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-logstash
  labels:
    app: {{ .Release.Name }}-{{ .Chart.Name }}-logstash
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}-logstash
    spec:
      hostname: logstash
      securityContext:
        runAsUser: 0
      containers:
        - name: logstash
          image: {{ .Values.logstash.image }}  
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /usr/share/logstash/data
              name: logstash-pv-volume
            - name: logstash-config
              mountPath: /opt/logstash/pipeline/logstash.conf
              subPath: logstash.conf
            - name: logstash-config
              mountPath: /opt/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: varlog
              mountPath: /var/log/containers
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      volumes:
        - name: logstash-pv-volume
          persistentVolumeClaim:
            {{- if .Values.logstash.volumeClaim.existingClaimName }}
            claimName: {{ .Values.logstash.volumeClaim.existingClaimName }}
            {{- else }} 
            claimName: {{ .Release.Name }}-{{ .Values.logstash.volumeClaim.name }}
            {{- end }} 
        - name: logstash-config
          configMap:
            name: {{ .Release.Name }}-logstash
        - name: varlog
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
